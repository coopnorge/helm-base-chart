{
  "additionalProperties": false,
  "properties": {
    "advanced": {
      "additionalProperties": false,
      "properties": {
        "deployment": {
          "additionalProperties": false,
          "properties": {
            "kubeScoreIgnore": {
              "items": {
                "type": "string"
              },
              "description": "kube-score ignore policies. This is only related to\nthe kube-score validation",
              "title": "kubeScoreIgnore",
              "type": "array"
            },
            "podSecurityContext": {
              "additionalProperties": false,
              "properties": {
                "fsGroup": {
                  "default": 65534,
                  "description": "group set on files and mounts",
                  "title": "fsGroup",
                  "type": "integer"
                }
              },
              "description": "podSecurityContext sets security contexts which can\nonly set on pod level",
              "title": "podSecurityContext",
              "type": "object"
            },
            "securityContext": {
              "additionalProperties": false,
              "properties": {
                "capabilities": {
                  "additionalProperties": false,
                  "properties": {
                    "drop": {
                      "items": {
                        "type": "string"
                      },
                      "description": "which capabilities to drop",
                      "title": "drop",
                      "type": "array"
                    }
                  },
                  "description": "security related capabilities ",
                  "title": "capabilities",
                  "type": "object"
                },
                "readOnlyRootFilesystem": {
                  "default": true,
                  "description": "set rootfilesystem to read only",
                  "title": "readOnlyRootFilesystem",
                  "type": "boolean"
                },
                "runAsGroup": {
                  "default": 65534,
                  "description": "id of the group ",
                  "title": "runAsGroup",
                  "type": "integer"
                },
                "runAsNonRoot": {
                  "default": true,
                  "description": "force process as non root",
                  "title": "runAsNonRoot",
                  "type": "boolean"
                },
                "runAsUser": {
                  "default": 65534,
                  "description": "id of the user",
                  "title": "runAsUser",
                  "type": "integer"
                }
              },
              "description": "security context set on deployment level",
              "title": "securityContext",
              "type": "object"
            }
          },
          "description": "Settings related to the deployment object",
          "title": "deployment",
          "type": "object"
        }
      },
      "description": "advanced configuration \nThis exposes some configuration options which an user \ngeneraly should not change.",
      "title": "advanced",
      "type": "object"
    },
    "configMaps": {
      "additionalProperties": {
        "data": {
          "additionalProperties": {
            "description": "one or more key value pairs.",
            "type": "string"
          },
          "examples": [
            {
              "key": "value",
              "other": "value"
            }
          ],
          "type": "object"
        }
      },
      "description": "You can define configmaps and they will be automaticly \nmounted as environment variables in the deployment.\nconfigMaps:\n  myServiceCM:\n    data:\n      size: 1344\n      features: fast",
      "title": "configMaps",
      "type": "object"
    },
    "connectivity": {
      "additionalProperties": false,
      "properties": {
        "externalServices": {
          "additionalProperties": {
            "hosts": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "ports": {
              "items": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "number": {
                    "type": "integer"
                  },
                  "protocol": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "resolution": {
              "default": "DNS",
              "required": false,
              "type": "string"
            }
          },
          "description": "Whitelist external services and endpoints\nExample\ngithub:\n  hosts:\n   - github.com\n   - www.github.com \n   - api.github.com\n   ports:\n     - name: https",
          "title": "externalServices",
          "type": "object"
        },
        "gRPC": {
          "additionalProperties": false,
          "properties": {
            "dns": {
              "default": "api.coop.no",
              "format": "hostname",
              "description": "DNS name to listen on",
              "title": "dns",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "description": "Enable gRPC.",
              "title": "enabled",
              "type": "boolean"
            },
            "pathMatcher": {
              "default": "",
              "description": "Path matcher for gRPC routing\nSets on which prefix of a path use use for routing requests to this app.  \nDefaults to \"/coopnorge.\u003cname\u003e.\"",
              "title": "pathMatcher",
              "anyOf": [
                {
                  "type": "string"
                },
                {}
              ]
            }
          },
          "description": "Settings for gRPC",
          "title": "gRPC",
          "type": "object"
        },
        "gRPCGateway": {
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable using http to GRPC transcoding via grpc gateway. ",
              "title": "enabled",
              "type": "boolean"
            },
            "portOverride": {
              "default": "",
              "description": "Overide the port for gRPCGateway. By default this is \n.port + 1 (default grpc port +1 )",
              "title": "portOverride",
              "anyOf": [
                {
                  "type": "integer"
                },
                {}
              ]
            }
          },
          "description": "Settings for using http to GRPC transcoding via grpc gateway. ",
          "title": "gRPCGateway",
          "type": "object"
        },
        "http": {
          "additionalProperties": false,
          "properties": {
            "dns": {
              "default": "api.coop.no",
              "format": "hostname",
              "description": "DNS name to listen on",
              "title": "dns",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "description": "Enable http. Do not enable if you just want to publish gRPC has http. Check \nconnectivity.gRPC.publishAsHTTP",
              "title": "enabled",
              "type": "boolean"
            },
            "path": {
              "default": "",
              "description": "The path on which the app is running on\nIf unset it will default to the name of the service",
              "title": "path",
              "anyOf": [
                {
                  "type": "string"
                },
                {}
              ]
            },
            "rewrite": {
              "default": "/",
              "description": "Where to rewrite to path to. Most containers require\nthe path to be /. ",
              "title": "rewrite",
              "type": "string"
            }
          },
          "description": "Settings for HTTP (non gRPC) traffic",
          "title": "http",
          "type": "object"
        },
        "httpToGRPC": {
          "additionalProperties": false,
          "properties": {
            "dns": {
              "default": "api.coop.no",
              "format": "hostname",
              "description": "DNS record on which to host the http server on",
              "title": "dns",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "description": "Enable or disable the http to gRPC translation",
              "title": "enabled",
              "type": "boolean"
            },
            "pathMatcher": {
              "default": "",
              "description": "Path matcher for httpTOgRPC routing\nSets on which prefix of a path use use for routing requests to this app.  \nDefaults to \"\u003cname\u003e\" resulting in api.coop.no/\u003cname\u003e and api.coop.no/\u003cname\u003e/",
              "title": "pathMatcher",
              "anyOf": [
                {
                  "type": "string"
                },
                {}
              ]
            },
            "protoDescriptorBinValue": {
              "default": "",
              "description": "protoDescriptorBinValue: base64 encoded value of the proto descriptor bin",
              "title": "protoDescriptorBinValue",
              "anyOf": [
                {
                  "type": "string"
                },
                {}
              ]
            },
            "services": {
              "items": {
                "type": "string"
              },
              "description": "services: list of gRPC services packaged in the proto descriptor",
              "title": "services",
              "type": "array"
            }
          },
          "description": "httpToGRPC translation configuration",
          "title": "httpToGRPC",
          "type": "object"
        }
      },
      "description": "Connectivity settings ",
      "title": "connectivity",
      "type": "object"
    },
    "environment": {
      "default": "production",
      "description": "Name of the environment.",
      "title": "environment",
      "type": "string"
    },
    "environmentVariables": {
      "additionalProperties": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "null"
          }
        ]
      },
      "description": "The environment variables set on the service. The format\nis ENV_NAME: Value",
      "title": "environmentVariables",
      "type": "object",
      "examples": [
        "LOG_LEVEL: debug",
        "MODE: cluster"
      ]
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "title": "global",
      "type": "object"
    },
    "health": {
      "additionalProperties": false,
      "properties": {
        "livenessProbe": {
          "description": "Override livenessprobe, use native format",
          "type": "object"
        },
        "path": {
          "default": "/",
          "description": "Defaults to / if '.connectivity.http.enabled' is set to 'true'",
          "type": "string"
        },
        "readinessProbe": {
          "description": "Override readinessprobe, use native format",
          "type": "object"
        }
      },
      "description": "The health endpoint of the service. If '.connectivity.gRPC.enabled' \nis set to 'true' it will use tcpSocket with `.port` as healthcheck. ",
      "title": "health",
      "type": "object"
    },
    "image": {
      "additionalProperties": false,
      "properties": {
        "registry": {
          "default": "europe-docker.pkg.dev",
          "description": "The registry of the OCI ",
          "title": "registry",
          "type": "string",
          "examples": [
            "europe-docker.pkg.dev"
          ]
        },
        "repository": {
          "default": "helloworld-shared-0918/helloworld",
          "description": "The repository of the OCI",
          "title": "repository",
          "type": "string",
          "examples": [
            "helloworld-shared-0918/helloworld"
          ]
        },
        "tag": {
          "default": "v1.0.0",
          "description": "The tag of the OC",
          "title": "tag",
          "type": "string",
          "examples": [
            "v1.0.0",
            "gitc-348ja3304"
          ]
        }
      },
      "description": "A map containg the details of the OCI for this service",
      "title": "image",
      "type": "object"
    },
    "name": {
      "default": "app",
      "pattern": "^[a-z\\-]{3,62}$",
      "description": "Name of the service.",
      "title": "name",
      "type": "string"
    },
    "port": {
      "default": 3000,
      "minimum": 2000,
      "maximum": 65000,
      "description": "The port on which the service is running. ",
      "title": "port",
      "type": "integer"
    },
    "resources": {
      "additionalProperties": false,
      "properties": {
        "cpu": {
          "default": "200m",
          "description": "The amount of CPU for this service. 1 = 1 CPU and 500m = 0.5 CPU.",
          "title": "cpu",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ]
        },
        "istioProxyCpu": {
          "default": "20m",
          "description": "The amount of CPU for istio sidecar",
          "title": "istioProxyCpu",
          "type": "string"
        },
        "istioProxyCpuLimit": {
          "default": "1000m",
          "description": "The CPU limit for istio sidecar",
          "title": "istioProxyCpuLimit",
          "type": "string"
        },
        "istioProxyMemory": {
          "default": "64Mi",
          "description": "The amount of memory for istio sidecar",
          "title": "istioProxyMemory",
          "type": "string"
        },
        "istioProxyMemoryLimit": {
          "default": "1Gi",
          "description": "The memory limit for istio sidecar",
          "title": "istioProxyMemoryLimit",
          "type": "string"
        },
        "memory": {
          "default": "64M",
          "description": "The amount of memory for this service.",
          "title": "memory",
          "type": "string"
        }
      },
      "description": "The resources that the service requires to run",
      "title": "resources",
      "type": "object"
    },
    "scaling": {
      "additionalProperties": false,
      "properties": {
        "autoScalingEnabled": {
          "default": true,
          "description": "Enable or disable autoscaling",
          "title": "autoScalingEnabled",
          "type": "boolean"
        },
        "maxReplicas": {
          "default": 4,
          "description": "Maximum number of replicas",
          "title": "maxReplicas",
          "type": "integer"
        },
        "replicas": {
          "default": 2,
          "description": "Minimum number of replica",
          "title": "replicas",
          "type": "integer"
        },
        "scalingCpuPercentage": {
          "default": 80,
          "description": "CPU percentage on which to scale. This is percentage based the '.resources.cpu'",
          "title": "scalingCpuPercentage",
          "type": "integer"
        },
        "scalingMemoryPercentage": {
          "default": 80,
          "description": "Memory percentage on which to scale. This is percentage based the '.resources.memory'",
          "title": "scalingMemoryPercentage",
          "type": "integer"
        }
      },
      "description": "Set the autoscaling properties for the service",
      "title": "scaling",
      "type": "object"
    },
    "secrets": {
      "additionalProperties": {
        "secrets": {
          "properties": {
            "provider": {
              "enum": [
                "gcp"
              ],
              "type": "string"
            },
            "secrets": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "description": "You can define secrets as external secrets. Only GCP secrets \nare supported at the moment\nsecrets:\n secretObjectName:\n   provider: gcp (where secrets are stored) \n   secrets:\n     key-name: secret-id",
      "title": "secrets",
      "type": "object"
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object"
}