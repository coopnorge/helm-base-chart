{
  "type": "object",
  "properties": {
    "advanced": {
      "type": "object",
      "title": "advanced",
      "description": "advanced configuration \nThis exposes some configuration options which an user \ngeneraly should not change. ",
      "properties": {
        "deployment": {
          "type": "object",
          "title": "deployment",
          "properties": {
            "kubeScoreIgnore": {
              "type": "array",
              "title": "kubeScoreIgnore",
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "podSecurityContext": {
              "type": "object",
              "title": "podSecurityContext",
              "properties": {
                "fsGroup": {
                  "type": "integer",
                  "title": "fsGroup",
                  "default": "65534"
                }
              },
              "additionalProperties": false,
              "required": [
                "fsGroup"
              ]
            },
            "securityContext": {
              "type": "object",
              "title": "securityContext",
              "properties": {
                "capabilities": {
                  "type": "object",
                  "title": "capabilities",
                  "properties": {
                    "drop": {
                      "type": "array",
                      "title": "drop",
                      "items": {
                        "anyOf": [
                          {
                            "type": "string"
                          }
                        ]
                      }
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "drop"
                  ]
                },
                "readOnlyRootFilesystem": {
                  "type": "boolean",
                  "title": "readOnlyRootFilesystem",
                  "default": "true"
                },
                "runAsGroup": {
                  "type": "integer",
                  "title": "runAsGroup",
                  "default": "65534"
                },
                "runAsNonRoot": {
                  "type": "boolean",
                  "title": "runAsNonRoot",
                  "default": "true"
                },
                "runAsUser": {
                  "type": "integer",
                  "title": "runAsUser",
                  "default": "65534"
                }
              },
              "additionalProperties": false,
              "required": [
                "capabilities",
                "readOnlyRootFilesystem",
                "runAsNonRoot",
                "runAsUser",
                "runAsGroup"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "kubeScoreIgnore",
            "podSecurityContext",
            "securityContext"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "deployment"
      ]
    },
    "configMaps": {
      "type": "object",
      "title": "configMaps",
      "description": "You can define configmaps and they will be automaticly \nmounted as environment variables in the deployment.\nconfigMaps:\n  myServiceCM:\n    data:\n      size: 1344\n      features: fast",
      "additionalProperties": {
        "data": {
          "additionalProperties": {
            "description": "one or more key value pairs.",
            "type": "string"
          },
          "examples": [
            {
              "key": "value",
              "other": "value"
            }
          ],
          "type": "object"
        }
      }
    },
    "connectivity": {
      "type": "object",
      "title": "connectivity",
      "properties": {
        "externalServices": {
          "type": "object",
          "title": "externalServices",
          "additionalProperties": false
        },
        "gRPC": {
          "type": "object",
          "title": "gRPC",
          "properties": {
            "dns": {
              "type": "string",
              "title": "dns",
              "default": "api.coop.no"
            },
            "enabled": {
              "type": "boolean",
              "title": "enabled",
              "default": "false"
            }
          },
          "additionalProperties": false,
          "required": [
            "enabled",
            "dns"
          ]
        },
        "http": {
          "type": "object",
          "title": "http",
          "properties": {
            "additionalEndpoints": {
              "type": "array",
              "title": "additionalEndpoints",
              "items": {}
            },
            "dns": {
              "type": "string",
              "title": "dns",
              "default": "api.coop.no"
            },
            "enabled": {
              "type": "boolean",
              "title": "enabled",
              "description": "do not enable if you just want to publish gRPC has http. Check \nconnectivity.gRPC.publishAsHTTP",
              "default": "false"
            },
            "rewrite": {
              "type": "string",
              "title": "rewrite",
              "description": "#path: # defaults to name (or app.name in case this chart is used as dependency) ",
              "default": "/"
            }
          },
          "additionalProperties": false,
          "required": [
            "enabled",
            "dns",
            "rewrite",
            "additionalEndpoints"
          ]
        },
        "httpToGRPC": {
          "type": "object",
          "title": "httpToGRPC",
          "properties": {
            "dns": {
              "type": "string",
              "title": "dns",
              "default": "api.coop.no"
            },
            "enabled": {
              "type": "boolean",
              "title": "enabled",
              "description": "!! Note: This is susceptible to change.",
              "default": "false"
            },
            "protoDescriptorBinValue": {
              "type": "null",
              "title": "protoDescriptorBinValue",
              "description": "protoDescriptorBinValue: base64 encoded value of the proto descriptor bin",
              "default": ""
            },
            "services": {
              "type": "array",
              "title": "services",
              "description": "services: list of gRPC services packaged in the proto descriptor",
              "items": {}
            }
          },
          "additionalProperties": false,
          "required": [
            "enabled",
            "dns",
            "protoDescriptorBinValue",
            "services"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "http",
        "gRPC",
        "externalServices",
        "httpToGRPC"
      ]
    },
    "environment": {
      "type": "string",
      "title": "environment",
      "description": "Name of the environment.",
      "default": ""
    },
    "environmentVariables": {
      "type": "object",
      "title": "environmentVariables",
      "description": "The environment variables set on the service. The format\nis ENV_NAME: Value",
      "examples": [
        "LOG_LEVEL: debug",
        "MODE: cluster"
      ],
      "additionalProperties": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "null"
          }
        ]
      }
    },
    "global": {
      "type": "object",
      "title": "global",
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name."
    },
    "health": {
      "type": "object",
      "title": "health",
      "description": "The health endpoint of the service. If '.connectivity.gRPC.enabled' \nis set to 'true' it will use tcpSocket with `.port` as healthcheck. ",
      "properties": {
        "livenessProbe": {
          "type": "object",
          "description": "Override livenessprobe, use native format"
        },
        "path": {
          "type": "string",
          "description": "Defaults to / if '.connectivity.http.enabled' is set to 'true'",
          "default": "/"
        },
        "readinessProbe": {
          "type": "object",
          "description": "Override readinessprobe, use native format"
        }
      },
      "additionalProperties": false
    },
    "image": {
      "type": "object",
      "title": "image",
      "description": "A map containg the details of the OCI for this service",
      "properties": {
        "registry": {
          "type": "string",
          "title": "registry",
          "description": "The registry of the OCI ",
          "default": "europe-docker.pkg.dev",
          "pattern": "^[a-z\\.]{3,63}$",
          "examples": [
            "europe-docker.pkg.dev"
          ]
        },
        "repository": {
          "type": "string",
          "title": "repository",
          "description": "The repository of the OCI",
          "default": "",
          "pattern": "^[a-z\\/\\-]{3,63}$",
          "examples": [
            "helloworld-shared-0918/helloworld"
          ]
        },
        "tag": {
          "type": "string",
          "title": "tag",
          "description": "The tag of the OC",
          "default": "",
          "pattern": "^[a-z\\-\\._]{1,63}$",
          "examples": [
            "v1.0.0",
            "gitc-348ja3304"
          ]
        }
      },
      "additionalProperties": false
    },
    "name": {
      "type": "string",
      "title": "name",
      "description": "Name of the service.",
      "default": "",
      "pattern": "^[a-z]{3,62}$"
    },
    "port": {
      "type": "integer",
      "title": "port",
      "description": "The port on which the service is running. ",
      "default": "",
      "minimum": 2000,
      "maximum": 65000
    },
    "resources": {
      "type": "object",
      "title": "resources",
      "description": "The resources that the service requires to run",
      "properties": {
        "cpu": {
          "type": "string",
          "title": "cpu",
          "description": "The amount of CPU for this service. 1 = 1 CPU and 500m = 0.5 CPU.",
          "default": "200m"
        },
        "memory": {
          "type": "string",
          "title": "memory",
          "description": "The amount of memory for this service. ",
          "default": "64M"
        }
      },
      "additionalProperties": false
    },
    "scaling": {
      "type": "object",
      "title": "scaling",
      "description": "Set the autoscaling properties for the service",
      "properties": {
        "autoScalingEnabled": {
          "type": "boolean",
          "title": "autoScalingEnabled",
          "description": "Enable or disable autoscaling",
          "default": "true"
        },
        "maxReplicas": {
          "type": "integer",
          "title": "maxReplicas",
          "description": "Maximum number of replicas",
          "default": "4"
        },
        "replicas": {
          "type": "integer",
          "title": "replicas",
          "description": "Minimum number of replica",
          "default": "2"
        },
        "scalingCpuPercentage": {
          "type": "integer",
          "title": "scalingCpuPercentage",
          "description": "CPU percentage on which to scale. This is percentage based the '.resources.cpu'",
          "default": "80"
        },
        "scalingMemoryPercentage": {
          "type": "integer",
          "title": "scalingMemoryPercentage",
          "description": "Memory percentage on which to scale. This is percentage based the '.resources.memory'",
          "default": "80"
        }
      },
      "additionalProperties": false
    },
    "secrets": {
      "type": "object",
      "title": "secrets",
      "description": "You can define secrets as external secrets. Only GCP secrets \nare supported at the moment\nsecrets:\n secretObjectName:\n   provider: gcp (where secrets are stored) \n   secrets:\n     key-name: secret-id",
      "additionalProperties": {
        "secrets": {
          "properties": {
            "provider": {
              "enum": [
                "gcp"
              ],
              "type": "string"
            },
            "secrets": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      }
    }
  },
  "additionalProperties": false,
  "required": [
    "connectivity",
    "advanced"
  ],
  "$schema": "http://json-schema.org/draft-07/schema#"
}