on:
  pull_request: {}
  push:
    branches:
      - main

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      run-techdocs-ci: ${{ steps.changes.outputs.techdocs == 'true' || steps.changes.outputs.devtools == 'true' }}
      run-helmchart-ci: ${{ steps.changes.outputs.helmchart == 'true' }}
      run-terraform-ci: ${{ steps.changes.outputs.terraform == 'true' || steps.changes.outputs.devtools == 'true' }}
      terraform-validation-only: ${{ steps.changes.outputs.terraform == 'false' && steps.changes.outputs.devtools == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - id: xdg_cache_hash
        run: echo "xdg_cache_hash=${{hashFiles('./docker-compose.yml', './docker-compose/Dockerfile', './**/go.sum')}}" >> $GITHUB_OUTPUT
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          list-files: json
          filters: |
            techdocs:
              - 'docs/**'
            helmchart:
              - 'charts/coop-app-chart/**'
              - 'examples/**'
            terraform:
              - 'infrastructure/terraform/**'
              - 'infrastructure/terraform-shared/**'
            devtools:
              - 'docker-compose/**'
              - '.github/workflows/**'
              - 'docker-compose.yaml'
      - name: Debug ...
        run: |
          echo "::${{ steps.changes.outputs }}"

  techdocs:
    needs: ["setup"]
    if: ${{ needs.setup.outputs.run-techdocs-ci == 'true'}}
    concurrency:
      group: ${{ github.repository }}-${{ github.workflow }}-techdocs-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      contents: read
      id-token: write
      packages: read
      pull-requests: read
    name: TechDocs
    uses: coopnorge/github-workflow-techdocs/.github/workflows/techdocs.yaml@v0

  helmchart:
    needs: ["setup"]
    runs-on: ubuntu-latest
    if: ${{ needs.setup.outputs.run-helmchart-ci == 'true' }}
    concurrency:
      group: ${{ github.repository }}-${{ github.workflow }}-helmchart-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: install helm 
        uses: azure/setup-helm@v4
        with:
           token: ${{ secrets.GITHUB_TOKEN }} # only needed if version is 'latest'
        id: install

      - name: install helm-schema
        run: |
          curl -L https://github.com/dadav/helm-schema/releases/download/${VERSION}/helm-schema_${VERSION}_Linux_x86_64.tar.gz  | tar -zxf - helm-schema
        env:
          VERSION: 0.8.2

      - name: validate schema
        run: |
          ./helm-schema -d -c charts/coop-app-chart/
          git diff --exit-code charts/coop-app-chart/values.schema.json

      - name: test-example grpc
        run: |
          helm template .
        working-directory: examples/grpc

      - name: test-example http
        run: |
          helm template .
        working-directory: examples/http

      - name: test-example addons
        run: |
          helm template .
        working-directory: examples/addons

      - name: test-example multiple
        run: |
          helm template .
        working-directory: examples/multiple

## terraform-ci cannot be used because coopnorge/github-workflow-terraform-validation is internal
#  terraform-ci:
#    needs: setup
#    if: ${{ needs.setup.outputs.run-terraform-ci == 'true' }}
#    concurrency:
#      group: ${{ github.repository }}-${{ github.workflow }}-terraform-ci-${{ github.ref }}
#      cancel-in-progress: true
#    uses: coopnorge/github-workflow-terraform-validation/.github/workflows/terraform-validation.yaml@v3.2.0
#    with:
#      use-github-for-plan: true
#      dependabot-automerge-enabled: true
#      dependabot-automerge-preview: false
#      docker-compose-service: terraform-devtools
#      validation-only: ${{ needs.setup.outputs.terraform-validation-only == 'true' }}
#    secrets:
#      reviewbot-github-token: ${{ secrets.REVIEWBOT_GITHUB_TOKEN }}
#      spacelift-read-token: ${{ secrets.SPACELIFT_READ_TOKEN }}

  build:
    needs:
      - techdocs
      - helmchart
    if: always()
    runs-on: ubuntu-latest
    steps:
      - run: exit 1
        name: "Catch errors"
        if: |
          needs.techdocs.result == 'failure' || 
          needs.helmchart.result == 'failure'
