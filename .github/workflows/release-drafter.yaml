name: Release drafter

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - edited

permissions:
  contents: read

jobs:
  release-draft:
    permissions:
      pull-requests: write
      contents: write
    uses: coopnorge/github-workflow-release-drafter/.github/workflows/release-drafter.yaml@v0.2.0

  get-release-details:
    needs:
      - release-draft
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get release version
        id: get-release-version
        run: |
          RELEASE_VERSION=${{ needs.release-draft.outputs.tag_name }}
          echo "release_version=$RELEASE_VERSION" >> $GITHUB_OUTPUT
          echo "branch_name=update-chart-version-to-$RELEASE_VERSION" >> $GITHUB_OUTPUT

      - name: Compare version from release draft with version in Chart.yaml
        id: compare-versions
        run: |
          echo "versions_match=$(jq -n --arg release_version "${{ steps.get-release-version.outputs.release_version }}" --arg chart_version "$(yq eval '.version' charts/coop-app-chart/Chart.yaml)" '$release_version == $chart_version')" >> $GITHUB_OUTPUT
          
  update-helm-chart-version:
    needs:
      - get-release-details
    if: needs.get-release-details.steps.compare-versions.outputs.versions_match == 'false'
    uses: coopnorge/engineering-github-actions/.github/workflows/update-infrastructure-repo.yaml@main
    secrets:
      write-back-app-pem: ${{ secrets.WRITEBACK_APP_PRIVATE_KEY_PEM }}
      approve-pr-token: ${{ secrets.REVIEWBOT_GITHUB_TOKEN }}
    with:
      environment-matrix-json: >-
        [{
            "environment": "production",
            "auto-merge": "true" ,
            "auto-approve" : "true"
        }]
      source-github-repo: ${{ github.repository }}
      update-script: |
        yq eval -i '.version = "${{ needs.get-release-details.steps.get-release-version.outputs.release_version }}"' charts/coop-app-chart/Chart.yaml
