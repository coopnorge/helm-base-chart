name: Release chart workflow

on:
  workflow_call:
    inputs:
      repository:
        required: true
        type: string
        description: >-
          Repository that contains the chart to be released. This is the 
          repository that is checked out and used to generate the chart and 
          index.
      oci-repository:
        required: true
        type: string
        description: >-
          OCI repository to publish the helm chart to.
      release-tag:
        required: true
        type: string
        description: >-
          Release tag that is used to create the release. This is the tag that 
          is used to identify the release where the artifact is uploaded to.
      release-version:
        required: true
        type: string
        description: >-
          Release version that is used to create the release. This is used as the
          version in the helm chart, the index and the filename.
      chart-path:
        required: true
        type: string
        description: >-
          Path to the helm chart that is to be released. The path must be relative
          to the repository root.
      skip-upload:
        required: false
        default: false
        type: boolean
        description: >-
          If true, the chart is not uploaded to the release. This is useful if you
          want to use the workflow to only update the index file. Relevant for
          draft pull requests.
    secrets:
      github-token:
        required: true
        description: >-
          GitHub token that is used to create the release.
    outputs:
      html-url:
        value: ${{ jobs.publish-chart-release.outputs.html-url }}
        description: >-
          URL to the release that was created.
      chart-filename:
        value: ${{ jobs.publish-chart-release.outputs.chart-filename }}
        description: >-
          Filename of the chart that was uploaded to the release.
      download-url:
        value: ${{ jobs.publish-chart-release.outputs.download-url }}
        description: >-
          URL to the chart that was uploaded to the release.

jobs:
  publish-chart-release:
    permissions:
      id-token: write
      contents: write
    runs-on: ubuntu-latest
    outputs:
      chart-filename: ${{ steps.get-chart-filename.outputs.chart-filename }}
      html-url: ${{ steps.upload-chart.outputs.html_url }}
      download-url: oci://${{ inputs.oci-repository }}/coop-app-chart:${{ inputs.release-version }}
    steps:
      - name: Checkout the release
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          fetch-depth: 0
          path: main-repo
          token: ${{ secrets.github-token }}

      - name: Checkout latest gh-pages
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          ref: gh-pages
          path: gh-pages
          token: ${{ secrets.github-token }}

      - name: Install Helm
        uses: azure/setup-helm@v4
        env:
          GITHUB_TOKEN: ${{ secrets.github-token }}

      - name: Generate helm chart
        run: |
          helm package main-repo/${{ inputs.chart-path }} --version ${{ inputs.release-version }}

      - name: Get helm chart filename
        id: get-chart-filename
        run: |
          CHART_PATH=${{ inputs.chart-path }}
          CHART_FILENAME=$(basename $CHART_PATH)-${{ inputs.release-version }}.tgz
          echo "chart-filename=$CHART_FILENAME" >> "$GITHUB_OUTPUT"

      - uses: google-github-actions/auth@v2
        with:
          project_id: helmbasecharts-shared-5ebb
          workload_identity_provider: projects/345583511543/locations/global/workloadIdentityPools/github-actions/providers/github-actions-provider
          service_account: gh-ap-helm-base-chart-infras@helmbasecharts-shared-5ebb.iam.gserviceaccount.com

      - name: Login to Artifact Registry with Helm
        if: ${{ !inputs.skip-upload }}
        run: |
          gcloud auth configure-docker ${{ inputs.oci-repository }} --quiet
          gcloud auth application-default print-access-token | helm registry login -u oauth2accesstoken --password-stdin ${{ inputs.oci-repository }}

      - name: Upload chart to artifact registry
        if: ${{ !inputs.skip-upload }}
        run: |
          helm push "${{ steps.get-chart-filename.outputs.chart-filename }}" "oci://${{ inputs.oci-repository }}"

      - name: Update helm chart index for current release
        if: ${{ !inputs.skip-upload }}
        run: |
          # Generate URL for the current release
          helm repo index --url "oci://${{ inputs.oci-repository }}" --merge gh-pages/index.yaml .
          mv index.yaml gh-pages/index.yaml

      - name: Update URL to OCI url
        if: ${{ !inputs.skip-upload }}
        run: |
          yq eval --inplace '.entries.coop-app-chart[] |= (select(.version == "${{ inputs.release-version }}") | .urls[0] = "oci://${{ inputs.oci-repository }}/coop-app-chart:${{ inputs.release-version }}")' gh-pages/index.yaml

      - name: Configure git
        working-directory: gh-pages
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Update index file in GitHub pages
        working-directory: gh-pages
        run: |
          # different commit message when upload is skipped
          if [[ ${{ inputs.skip-upload }} == true ]]; then
            UPDATE_MESSAGE="Refresh index (version: ${{ inputs.release-version }})"
          else
            UPDATE_MESSAGE="Update index with version ${{ inputs.release-version }}"
          fi
          git add .
          # Check if there are any changes
          if git diff --staged --quiet; then
            echo "No changes in index.yaml to commit"
          else
            git commit -m "$UPDATE_MESSAGE"
            git push origin gh-pages
          fi
